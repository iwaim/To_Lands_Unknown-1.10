#textdomain wesnoth-To_Lands_Unknown

#define FAST_JOURNEY X Y
    # Make a new journey mark on a tracking map
    [image]
        x,y={X},{Y}
        file=misc/new-journey.png
        delay=100
        centered=yes
    [/image]
#enddef

#define SLOW_JOURNEY X Y
    {NEW_JOURNEY {X} {Y}}
#enddef

#define HURRICANE_JOURNEY HX HY X Y
    [image]
        file=al-kamija-elementals/god-air1.png
        x,y={HX},{HY}
        centered=yes
        delay=100
    [/image]
    [image]
        file=al-kamija-elementals/god-air2.png
        x,y={HX},{HY}
        centered=yes
        delay=100
    [/image]                
    [image]
        file=al-kamija-elementals/god-air3.png
        x,y={HX},{HY}
        centered=yes
        delay=100
    [/image]           
    [image]
        file=al-kamija-elementals/god-air4.png
        x,y={HX},{HY}
        centered=yes
        delay=100
    [/image]
    [image]
        x,y={X},{Y}
        file=misc/new-journey.png
        delay=0
        centered=yes
    [/image]
#enddef

#define RANDOM_INDEX ARRAYVAR INDEXVAR
    [set_variable]
        name={INDEXVAR}
        rand=1..${ARRAYVAR}.length
    [/set_variable]
    [set_variable]
        name={INDEXVAR}
        add=-1
    [/set_variable]
#enddef

#define COLLAR_EVENT
    [event]
        name=die
        first_time_only=no
        [filter]
            [filter_wml]
                [status]
                    collar=yes
                [/status]
            [/filter_wml]
        [/filter]
        [if]
            [variable]
                name=unit.status.firstrecall
                equals=yes
            [/variable]
            [then]
                {VARIABLE unit.status.firstrecall no}
                {RECALL_ACTION}
            [/then]
            [else]
                [if]
                    [variable]
                        name=unit.status.secondrecall
                        equals=yes
                    [/variable]
                    [then]
                        {VARIABLE unit.status.secondrecall no}
                        {RECALL_ACTION}
                    [/then]
                    [else]
                        [if]
                            [variable]
                                name=unit.status.thirdrecall
                                equals=yes
                            [/variable]
                            [then]
                                {VARIABLE unit.status.thirdrecall no}
                                {RECALL_ACTION}
                            [/then]
                            [else]
                            [/else]
                        [/if]
                    [/else]
                [/if]
            [/else]
        [/if]
    [/event]
#enddef

#define RECALL_ACTION
    [store_unit]
        [filter]
            canrecruit=yes
            side=$unit.side
        [/filter]
        variable=summonerleader
    [/store_unit]
    [unstore_unit]
        variable=unit
        x,y=$summonerleader.x,$summonerleader.y
        find_vacant=yes
        text= _ "Recalled..."
        {COLOR_HEAL}
    [/unstore_unit]
    {CLEAR_VARIABLE summonerleader}
    {FULL_HEAL (
        [not]
            x,y=$x1,$y1
        [/not]
        [filter_wml]
            [status]
                collar=yes
            [/status]
        [/filter_wml]
    )}
#enddef

#define SUMMONER_LOCK
    [event]
        name=recall,recruit
        first_time_only=no
        [filter]
            type=I8 Ak_SummonerII
        [/filter]
        {VARIABLE unit.advances_to (I8 Ak_SummonerIII_lock,I8 Ak_Masterofbalance,I8 Ak_SummonerHeavy)}
        [unstore_unit]
            variable=unit
            find_vacant=no
        [/unstore_unit]
    [/event]
    [event]
        name=post advance
        first_time_only=no
        [filter]
            type=I8 Ak_SummonerII
        [/filter]
        {VARIABLE unit.advances_to (I8 Ak_SummonerIII_lock,I8 Ak_Masterofbalance,I8 Ak_SummonerHeavy)}
        [unstore_unit]
            variable=unit
            find_vacant=no
        [/unstore_unit]
    [/event]
#enddef

#define ILLUSION_MEMORY
    [event]
        name=die
        first_time_only=no

        [filter]
            side=1
            race=akhuman
        [/filter]

        [store_unit]
            [filter]
                x,y=$x1,$y1
            [/filter]
            variable=illusion_memory
            mode=append
        [/store_unit]
    [/event]
#enddef

#define RASHTI_TRANSFORMATIONS SIDE
    #true rashti death
    [event]
        name=last breath
        first_time_only=no
        [filter]
            type=I8 Ak_TrueRashti
        [/filter]
        #TrueRashti always becomes HoRashti, to retain stats
        {ADVANCE_UNIT (type=I8 Ak_TrueRashti) "I8 Ak_Rashti"}
        {ADVANCE_UNIT (type=I8 Ak_Rashti) "I8 Ak_HoRashti"}
        {UNIT {SIDE} (I8 Ak_DharmaRashti) $x1 $y1 ()}

        [fire_event]
            name=truerashti split
        [/fire_event]
    [/event]

    [event]
        name=last breath
        first_time_only=no
        [filter]
            type=I8 Ak_DharmaRashti,I8 Ak_HoRashti
        [/filter]
        [filter_second]
            [not]
                type=I8 Ak_DharmaRashti,I8 Ak_HoRashti
            [/not]
        [/filter_second]

        {FULL_HEAL x,y=$x1,$y1}
    [/event]

    [event]
        name=last breath
        first_time_only=no
        [filter]
            type=I8 Ak_DharmaRashti,I8 Ak_HoRashti
        [/filter]
        [filter_second]
            type=I8 Ak_DharmaRashti,I8 Ak_HoRashti
        [/filter_second]
        #HoRashti always becomes TrueRashti, to retain stats
        [kill]
            type=I8 Ak_DharmaRashti
        [/kill]
        {ADVANCE_UNIT (type=I8 Ak_HoRashti) "I8 Ak_Rashti"}
        {ADVANCE_UNIT (type=I8 Ak_Rashti) "I8 Ak_TrueRashti"}
        [fire_event]
            name=truerashti unified
        [/fire_event]
    [/event]
#enddef

#define RASHTI_AI SIDE
    {ai/aliases/stable_singleplayer.cfg}
    [ai]
        aggression=1.0
        caution=0.0
        {MODIFY_AI_ADD_CANDIDATE_ACTION {SIDE} main_loop (
            [candidate_action]
                id=escape_south
                engine=fai
                name=escape_south
                type=movement
                evaluation="if(me.type='I8 Ak_DharmaRashti',{AI_CA_GOTO_SCORE}+10,0)"
                action="move(me.loc, choose(unit_moves(me.loc),'mloc',-sum(map(simplest_path(mloc,find(units,id='Mehir').loc,me.loc), 'path_location', movement_cost( me, path_location ) ))) )"
            [/candidate_action]
        )}
        {MODIFY_AI_ADD_CANDIDATE_ACTION {SIDE} main_loop (
            [candidate_action]
                id=attack_gra
                engine=fai
                name=attack_gra
                type=attack
                evaluation="if(me.type = 'I8 Ak_DharmaRashti' and target.id = 'Mehir', {AI_CA_GOTO_SCORE} ,0)"
                action="attack(me.loc, me.loc, target.loc)"
            [/candidate_action]
        )}
    [/ai]
#enddef
